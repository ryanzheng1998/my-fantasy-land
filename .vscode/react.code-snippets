{
  "Init page component": {
    "prefix": "@init",
    "body": [
      "import React from 'react'",
      "",
      "const Page: React.FC = () => {",
      "  return <></>",
      "}",
      "",
      "export default Page",
      ""
    ],
    "description": ""
  },
  "Init page component with props": {
    "prefix": "@initWithProps",
    "body": [
      "import React from 'react'",
      "",
      "interface Props {}",
      "",
      "const Page: React.FC<Props> = (p) => {",
      "  return <></>",
      "}",
      "",
      "export default Page",
      ""
    ],
    "description": ""
  },
  "Init reducer pattern": {
    "prefix": "@initReducerPattern",
    "body": [
      "import React from 'react'",
      "import { useRequestAnimationFrame } from '../lib/hooks/useRequestAnimationFrame'",
      "",
      "// ----------------------",
      "// state model",
      "// ----------------------",
      "interface State {",
      "  timeStamp: number",
      "  tickig: boolean",
      "}",
      "",
      "const initState: State = {",
      "  timeStamp: 0,",
      "  tickig: false,",
      "}",
      "",
      "// ----------------------",
      "// action model",
      "// ----------------------",
      "export const Tick = (timeStamp: number) => ({",
      "  type: 'TICK' as const,",
      "  payload: timeStamp,",
      "})",
      "",
      "type Action = ReturnType<typeof Tick>",
      "",
      "// ----------------------",
      "// update",
      "// ----------------------",
      "const reducer = (state: State, action: Action) => {",
      "  switch (action.type) {",
      "    case 'TICK':",
      "      return {",
      "        ...state,",
      "        timeStamp: action.payload,",
      "      }",
      "  }",
      "}",
      "",
      "// ----------------------",
      "// render and side effect",
      "// ----------------------",
      "const Page: React.FC = () => {",
      "  const [state, dispatch] = React.useReducer(reducer, initState)",
      "",
      "  // side effect",
      "  useRequestAnimationFrame(",
      "    (timeStamp) => {",
      "      if (!state.tickig) return false",
      "",
      "      dispatch(Tick(timeStamp))",
      "      return true",
      "    },",
      "    [state.tickig]",
      "  )",
      "",
      "  return <></>",
      "}",
      "",
      "export default Page",
      ""
    ],
    "description": ""
  }
}
